<%
// Function to convert period ID to lecture index (excluding breaks)
function getLectureIndex(id) {
    let lectureIndex = 0;
    for (let i = 0; i < periodTimings.length; i++) {
        if (!periodTimings[i].is_break) {
            lectureIndex++;
        }
        if (periodTimings[i].id === id) {
            return lectureIndex; // stop and return current lecture index
        }
    }
    return -1; // if not found
}
%>
<% layout("/layouts/boilerplate.ejs") %>
<style>
    table {
        width: 85%;
        text-align: center;
        margin: 20px auto;
    }
    th, td {
        border: 1px solid black; 
        text-align: center; 
        vertical-align: middle;
        padding: 10px; 
        min-width: 120px;
        height: 50px;
        word-wrap: break-word;
    }
    th {
        background-color: #f2f2f2;
        font-weight: bold;
    }
    .timetable-container {
        margin-bottom: 30px;
    }
    .center-button {
        text-align: center;
        margin-top: 20px;
    }
</style>
<body>
<div class="dashboard-container">
    <!-- Sidebar Navigation -->
    <%- include("../includes/admin_sidebar.ejs") %>

    <!-- Main Content -->
    <div class="content">
        
        <form method="GET" action="/admin/timetable">
            <!-- onsubmit="return confirm('Are you sure you want to Regenerate this Timetable?');" -->
            <button class="btn btn-primary mb-3"><i class="bi bi-arrow-clockwise"></i> Regenerate Timetable</button>
        </form>

        <h2 class="text-center mb-4" style="color: black;"><i class="bi bi-calendar"></i> Timetables</h2>
        
        <!-- Filter Dropdown -->
        <div class="text-center mb-4">
            <label for="classSelect" class="fw-bold"><i class="bi bi-funnel"></i> Filter by Class:</label>
            <select id="classSelect" class="form-select w-auto d-inline-block" onchange="filterTimetable()">
                <option value="all">Show All</option>
                <% for (let class_id in timetableByClass) { %>
                    <option value="<%= class_id %>"><%= timetableByClass[class_id].class_name %></option>
                <% } %>
            </select>
        </div>

        <% for (let class_id in timetableByClass) { %>
            <div id="timetable_<%= class_id %>" class="timetable-container border rounded p-3 mb-4 shadow-sm bg-light">
                <h3 style="text-align: center;"> <%= timetableByClass[class_id].class_name %> Timetable</h3>
                
                <table id="timetableTable_<%= class_id %>">
                    <thead>
                        <tr>
                            <th>Time / Day</th>
                            <th>Monday</th>
                            <th>Tuesday</th>
                            <th>Wednesday</th>
                            <th>Thursday</th>
                            <th>Friday</th>
                        </tr>
                    </thead>
                    <tbody>
                    <% let merged = {}; %>
                    <% for (let pd = 0; pd < periodTimings.length; pd++) {
                        let periodObj = periodTimings[pd];
                        let label = `${formatTime(periodObj.start_time)} - ${formatTime(periodObj.end_time)}`;
                    %>

                        <% if (periodObj.is_break) { %>
                            <tr>
                                <th colspan="6" style="text-align: center; background-color: #e0e0e0;">
                                    <%= label %> (Break)
                                </th>
                            </tr>
                        <% } else {
                            let currentLecture = getLectureIndex(periodObj.id);
                            let nextPeriod = periodTimings[pd + 1];
                            let nextLecture = nextPeriod ? getLectureIndex(nextPeriod.id) : null;

                            // ADD THIS CHECK
                            let canMerge = nextPeriod && !nextPeriod.is_break;

                        %>
                        <tr>
                            <th><%= label %></th>
                            <% ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'].forEach(day => {
                                let key = `${currentLecture}-${day}`;
                                if (merged[key]) return;

                                let current = timetableByClass[class_id].timetable[currentLecture]?.[day];
                                let next = (canMerge && nextLecture !== null)
                                    ? timetableByClass[class_id].timetable[nextLecture]?.[day]
                                    : null;

                                let isDouble = canMerge && current && next &&
                                    current.subject_name === next.subject_name &&
                                    current.teacher_name === next.teacher_name &&
                                    current.room_name === next.room_name;
                            %>
                                <% if (isDouble) { %>
                                    <td rowspan="2">
                                        <%= current.subject_name %><br>
                                        <%= current.teacher_name %><br>
                                        <%= current.room_name %>
                                    </td>
                                    <% merged[`${nextLecture}-${day}`] = true; %>
                                <% } else { %>
                                    <td>
                                        <% if (current) { %>
                                            <%= current.subject_name %><br>
                                            <%= current.teacher_name %><br>
                                            <%= current.room_name %>
                                        <% } else { %>
                                            -
                                        <% } %>
                                    </td>
                                <% } %>
                            <% }); %>
                        </tr>
                        <% } %>
                    <% } %>
                    </tbody>
                </table>
                
                <div class="text-center">
                    <button class="btn btn-success" onclick="downloadPDF('<%= class_id %>')">
                        <i class="bi bi-file-earmark-pdf"></i> Download PDF
                    </button>
                </div>
            </div>
        <% } %>

        <!-- Save All Timetables Button -->
        <div class="center-button">
            <button class="btn btn-primary" onclick="saveAllTimetables()">
                <i class="bi bi-save"></i> Save All Timetables
            </button>
        </div>

    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>

<script>
    const timetableByClass = <%- JSON.stringify(timetableByClass) %>;
    const periodTimings = <%- JSON.stringify(periodTimings) %>;


    function filterTimetable() {
        let selectedClass = document.getElementById("classSelect").value;

        document.querySelectorAll(".timetable-container").forEach(table => {
            table.style.display = (selectedClass === "all" || table.id === "timetable_" + selectedClass) ? "block" : "none";
        });
    }

    function downloadPDF(classId) {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF({
            orientation: "landscape",
            unit: "mm",
            format: "a4"
        });
        const timetableContainer = document.querySelector(`#timetable_${classId}`);
        if (!timetableContainer) {
            alert("Timetable not found!");
            return;
        }
        const className = timetableContainer.querySelector("h3")?.innerText.replace(" Timetable", "").trim() || `Class_${classId}`;
        doc.setFontSize(18);
        doc.text(`Timetable for ${className}`, 148.5, 15, { align: "center" });

        const table = timetableContainer.querySelector("table");
        if (!table) {
            alert("Timetable table not found!");
            return;
        }

        const headers = [];
        table.querySelectorAll("thead tr th").forEach((th, index) => {
            headers.push({
                content: th.innerText.trim(),
                styles: {
                    halign: "center",
                    fillColor: [100, 150, 255], // Header row color
                    textColor: 255,
                    fontStyle: "bold"
                }
            });
        });

        const body = [];
        table.querySelectorAll("tbody tr").forEach(tr => {
            const row = [];
            const cells = Array.from(tr.children);
            if (cells.length === 1 && cells[0].hasAttribute("colspan")) {
                row.push({
                    content: cells[0].innerText.trim(),
                    colSpan: headers.length,
                    styles: {
                        halign: "center",
                        fontStyle: "bold",
                        fillColor: [220, 220, 220]
                    }
                });
            } else {
                cells.forEach((cell, index) => {
                    const cellData = {
                        content: cell.innerText.trim(),
                        styles: {
                            halign: "center"
                        }
                    };

                    if (index === 0) {
                        cellData.styles.fillColor = [230, 230, 250]; // Light lavender
                        cellData.styles.fontStyle = "bold";
                    }
                    if (cell.hasAttribute("colspan")) {
                        cellData.colSpan = parseInt(cell.getAttribute("colspan"));
                    }
                    if (cell.hasAttribute("rowspan")) {
                        cellData.rowSpan = parseInt(cell.getAttribute("rowspan"));
                    }
                    row.push(cellData);
                });
            }

            body.push(row);
        });

        doc.autoTable({
            head: [headers],
            body: body,
            startY: 25,
            theme: 'grid',
            styles: {
                fontSize: 10,
                cellPadding: 4,
                valign: "middle",
                halign: "center"
            },
            didParseCell: function (data) {
                // No-op: we manually style first column & header already
            }
        });

        doc.save(`${className}-Timetable.pdf`);
    }

    function saveAllTimetables() {
        if (!timetableByClass || Object.keys(timetableByClass).length === 0) {
            alert("No timetable data found.");
            return;
        }

        fetch('/admin/timetable/save', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(timetableByClass)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert("All timetables saved successfully!");
            } else {
                alert("Error: " + data.message);
            }
        })
        .catch(error => {
            console.error("Fetch Error:", error);
            alert("Error saving timetables.");
        });
    }
</script>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>